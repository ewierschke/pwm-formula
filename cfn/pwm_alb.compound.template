{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates an instance of PWM for account management, fronted by an Application Load Balancer.",
  "Parameters": {
    "VPC": {
      "Description": "VPC ID",
      "Type": "AWS::EC2::VPC::Id"
    },
    "FriendlyEnvironmentName": {
      "Description": "Friendly name of the Environment in which PWM is being installed, for use in emails and branding",
      "Type": "String",
      "Default": "EXAMPLE",
      "MinLength": "3",
      "MaxLength": "25"
    },
    "ResourceDNSDomainName": {
      "Description": "Fully qualified domain name (FQDN) of the domain e.g. example.com, where environment resources reside, usually the same as MailFromDNSDomainName",
      "Type": "String",
      "Default": "example.com",
      "MinLength": "3",
      "MaxLength": "25",
      "AllowedPattern": "[a-zA-Z0-9]+\\..+"
    },
    "MailFromDNSDomainName": {
      "Description": "Fully qualified domain name (FQDN) of the domain e.g. example.com, from which email will originate, usually the same as ResourceDNSDomainName",
      "Type": "String",
      "Default": "example.com",
      "MinLength": "3",
      "MaxLength": "25",
      "AllowedPattern": "[a-zA-Z0-9]+\\..+"
    },
    "MailToDNSDomainName": {
      "Description": "Fully qualified domain name (FQDN) of the domain e.g. example.com, to which pwm-notifications emails will be sent",
      "Type": "String",
      "Default": "example.com",
      "MinLength": "3",
      "MaxLength": "25",
      "AllowedPattern": "[a-zA-Z0-9]+\\..+"
    },
    "ALBSslCertificateName": {
      "Description": "The name (for IAM) or identifier (for ACM) of the SSL certificate to associate with the ELB. The cert must already exist in the service.",
      "Type": "String"
    },
    "ALBSslCertificateService": {
      "Description": "The service hosting the SSL certificate. Must be ACM or IAM.",
      "Type": "String",
      "Default": "ACM",
      "AllowedValues": [
        "ACM",
        "IAM"
      ]
    },
    "PublicSubnetIDs": {
      "Description": "A list of Public subnet IDs to attach to the load balancer.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "AmiId": {
      "Description": "AMI ID",
      "Type": "String",
      "Default": ""
    },
    "DesiredCapacity": {
      "Description": "The number of PWM instances the autoscale group will spin up initially",
      "Type": "String",
      "MinLength": "1",
      "Default": "1"
    },
    "MinCapacity": {
      "Description": "The minimum number of PWM instances for the autoscale group",
      "Type": "String",
      "MinLength": "1",
      "Default": "1"
    },
    "MaxCapacity": {
      "Description": "The maximum number of PWM instances for the autoscale group",
      "Type": "String",
      "MinLength": "1",
      "Default": "1"
    },
    "IAMGroup": {
      "Description": "ID of the IAM group to be granted SSH access to PWM instances",
      "Type": "String"
    },
    "InstanceType": {
      "Description": "Amazon EC2 instance type for the PWM Instances",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "c4.large",
        "c4.xlarge",
        "m4.large",
        "m4.xlarge"
      ]
    },
    "PrivateSubnetIDs": {
      "Description": "List of Private Subnet IDs where the PWM instances will run. (only select one, load balancing not tested)",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "PWMConfigBucketName": {
      "Description": "Name of the existing S3 bucket where the PWM config should be pulled and pushed",
      "Type": "String"
    }
  },
  "Resources": {
    "PWMSecurityGroupStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/app-chemistry/templates/pwm_security_group.element.template",
        "Parameters": {
          "VPC": {
            "Ref": "VPC"
          },
          "UseELB": "true"
        }
      }
    },
    "PWMALBTargetGroupStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/app-chemistry/templates/pwmbranch/pwm_alb_targetgroup.element.template",
        "Parameters": {
          "VPC": {
            "Ref": "VPC"
          }
        }
      }
    },
    "PWMALBStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": [
        "PWMSecurityGroupStack",
        "PWMALBTargetGroupStack"
      ],
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/app-chemistry/templates/pwm_alb_public_ssl_443.element.template",
        "Parameters": {
          "SslCertificateName": {
            "Ref": "ALBSslCertificateName"
          },
          "SslCertificateService": {
            "Ref": "ALBSslCertificateService"
          },
          "PublicSubnetIDs": {
            "Fn::Join": [
              ",",
              {
                "Ref": "PublicSubnetIDs"
              }
            ]
          },
          "SecurityGroupId": {
            "Fn::GetAtt": [
              "PWMSecurityGroupStack",
              "Outputs.PWMElbSecurityGroupId"
            ]
          },
          "TargetGroupId": {
            "Fn::GetAtt": [
              "PWMALBTargetGroupStack",
              "Outputs.TargetGroupName"
            ]
          }
        }
      }
    },
    "PWMAutoScaleStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": [
        "PWMSecurityGroupStack",
        "PWMALBTargetGroupStack"
      ],
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/app-chemistry/templates/pwmbranch/pwm_private_autoscale_alb.element.template",
        "Parameters": {
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "AmiId": {
            "Ref": "AmiId"
          },
          "InstanceType": {
            "Ref": "InstanceType"
          },
          "MinCapacity": {
            "Ref": "MinCapacity"
          },
          "MaxCapacity": {
            "Ref": "MaxCapacity"
          },
          "DesiredCapacity": {
            "Ref": "DesiredCapacity"
          },
          "IAMGroup": {
            "Ref": "IAMGroup"
          },
          "PWMConfigBucketName": {
            "Ref": "PWMConfigBucketName"
          },
          "PWMALBTargetGroupName": {
            "Fn::GetAtt": [
              "PWMALBTargetGroupStack",
              "Outputs.TargetGroupName"
            ]
          },
          "FriendlyEnvironmentName": {
            "Ref": "FriendlyEnvironmentName"
          },
          "ResourceDNSDomainName": {
            "Ref": "ResourceDNSDomainName"
          },
          "MailFromDNSDomainName": {
            "Ref": "MailFromDNSDomainName"
          },
          "MailToDNSDomainName": {
            "Ref": "MailToDNSDomainName"
          },
          "PrivateSubnetIDs": {
            "Fn::Join": [
              ",",
              {
                "Ref": "PrivetSubnetIDs"
              }
            ]
          },
          "SecurityGroupIdPWMInstance": {
            "Fn::Join": [
              ",",
              [
                {
                  "Fn::GetAtt": [
                    "PWMSecurityGroupStack",
                    "Outputs.PWMSecurityGroupId"
                  ]
                }
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "PWMLoadBalancerName": {
      "Description": "Name of the PWM Application Load Balancer",
      "Value": {
        "Fn::GetAtt": [
          "PWMALBStack",
          "Outputs.LoadBalancerName"
        ]
      }
    },
    "PWMLoadBalancerDns": {
      "Description": "DNS name for the PWM ALB",
      "Value": {
        "Fn::GetAtt": [
          "PWMALBStack",
          "Outputs.LoadBalancerDns"
        ]
      }
    },
    "PWMSecurityGroupId": {
      "Description": "Security Group ID for the PWM instances",
      "Value": {
        "Fn::GetAtt": [
          "PWMSecurityGroupStack",
          "Outputs.PWMSecurityGroupId"
        ]
      }
    },
    "PWMALBSecurityGroupId": {
      "Description": "Security Group ID for the PWM Application Load Balancer",
      "Value": {
        "Fn::GetAtt": [
          "PWMSecurityGroupStack",
          "Outputs.PWMElbSecurityGroupId"
        ]
      }
    }
  }
}
